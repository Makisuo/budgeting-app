/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as appImport } from './routes/__app'
import { Route as appIndexImport } from './routes/__app.index'
import { Route as AuthSigninImport } from './routes/auth/signin'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as appSubscriptionsImport } from './routes/__app.subscriptions'
import { Route as appSettingsImport } from './routes/__app.settings'
import { Route as appAccountsImport } from './routes/__app.accounts'
import { Route as appIdImport } from './routes/__app.$id'

// Create/Update Routes

const appRoute = appImport.update({
  id: '/__app',
  getParentRoute: () => rootRoute,
} as any)

const appIndexRoute = appIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appRoute,
} as any)

const AuthSigninRoute = AuthSigninImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const appSubscriptionsRoute = appSubscriptionsImport.update({
  id: '/subscriptions',
  path: '/subscriptions',
  getParentRoute: () => appRoute,
} as any)

const appSettingsRoute = appSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => appRoute,
} as any)

const appAccountsRoute = appAccountsImport.update({
  id: '/accounts',
  path: '/accounts',
  getParentRoute: () => appRoute,
} as any)

const appIdRoute = appIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => appRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/__app': {
      id: '/__app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof appImport
      parentRoute: typeof rootRoute
    }
    '/__app/$id': {
      id: '/__app/$id'
      path: '/$id'
      fullPath: '/$id'
      preLoaderRoute: typeof appIdImport
      parentRoute: typeof appImport
    }
    '/__app/accounts': {
      id: '/__app/accounts'
      path: '/accounts'
      fullPath: '/accounts'
      preLoaderRoute: typeof appAccountsImport
      parentRoute: typeof appImport
    }
    '/__app/settings': {
      id: '/__app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof appSettingsImport
      parentRoute: typeof appImport
    }
    '/__app/subscriptions': {
      id: '/__app/subscriptions'
      path: '/subscriptions'
      fullPath: '/subscriptions'
      preLoaderRoute: typeof appSubscriptionsImport
      parentRoute: typeof appImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof rootRoute
    }
    '/__app/': {
      id: '/__app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexImport
      parentRoute: typeof appImport
    }
  }
}

// Create and export the route tree

interface appRouteChildren {
  appIdRoute: typeof appIdRoute
  appAccountsRoute: typeof appAccountsRoute
  appSettingsRoute: typeof appSettingsRoute
  appSubscriptionsRoute: typeof appSubscriptionsRoute
  appIndexRoute: typeof appIndexRoute
}

const appRouteChildren: appRouteChildren = {
  appIdRoute: appIdRoute,
  appAccountsRoute: appAccountsRoute,
  appSettingsRoute: appSettingsRoute,
  appSubscriptionsRoute: appSubscriptionsRoute,
  appIndexRoute: appIndexRoute,
}

const appRouteWithChildren = appRoute._addFileChildren(appRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof appRouteWithChildren
  '/$id': typeof appIdRoute
  '/accounts': typeof appAccountsRoute
  '/settings': typeof appSettingsRoute
  '/subscriptions': typeof appSubscriptionsRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/signin': typeof AuthSigninRoute
  '/': typeof appIndexRoute
}

export interface FileRoutesByTo {
  '/$id': typeof appIdRoute
  '/accounts': typeof appAccountsRoute
  '/settings': typeof appSettingsRoute
  '/subscriptions': typeof appSubscriptionsRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/signin': typeof AuthSigninRoute
  '/': typeof appIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/__app': typeof appRouteWithChildren
  '/__app/$id': typeof appIdRoute
  '/__app/accounts': typeof appAccountsRoute
  '/__app/settings': typeof appSettingsRoute
  '/__app/subscriptions': typeof appSubscriptionsRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/signin': typeof AuthSigninRoute
  '/__app/': typeof appIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/$id'
    | '/accounts'
    | '/settings'
    | '/subscriptions'
    | '/auth/register'
    | '/auth/signin'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$id'
    | '/accounts'
    | '/settings'
    | '/subscriptions'
    | '/auth/register'
    | '/auth/signin'
    | '/'
  id:
    | '__root__'
    | '/__app'
    | '/__app/$id'
    | '/__app/accounts'
    | '/__app/settings'
    | '/__app/subscriptions'
    | '/auth/register'
    | '/auth/signin'
    | '/__app/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  appRoute: typeof appRouteWithChildren
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthSigninRoute: typeof AuthSigninRoute
}

const rootRouteChildren: RootRouteChildren = {
  appRoute: appRouteWithChildren,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthSigninRoute: AuthSigninRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/__app",
        "/auth/register",
        "/auth/signin"
      ]
    },
    "/__app": {
      "filePath": "__app.tsx",
      "children": [
        "/__app/$id",
        "/__app/accounts",
        "/__app/settings",
        "/__app/subscriptions",
        "/__app/"
      ]
    },
    "/__app/$id": {
      "filePath": "__app.$id.tsx",
      "parent": "/__app"
    },
    "/__app/accounts": {
      "filePath": "__app.accounts.tsx",
      "parent": "/__app"
    },
    "/__app/settings": {
      "filePath": "__app.settings.tsx",
      "parent": "/__app"
    },
    "/__app/subscriptions": {
      "filePath": "__app.subscriptions.tsx",
      "parent": "/__app"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/auth/signin": {
      "filePath": "auth/signin.tsx"
    },
    "/__app/": {
      "filePath": "__app.index.tsx",
      "parent": "/__app"
    }
  }
}
ROUTE_MANIFEST_END */
