/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AuthSigninImport } from './routes/auth/signin'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AppSubscriptionsImport } from './routes/_app/subscriptions'
import { Route as AppSettingsImport } from './routes/_app/settings'
import { Route as AppAccountsIndexImport } from './routes/_app/accounts/index'
import { Route as AppAccountsAccountIdImport } from './routes/_app/accounts/$accountId'

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AuthSigninRoute = AuthSigninImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AppSubscriptionsRoute = AppSubscriptionsImport.update({
  id: '/subscriptions',
  path: '/subscriptions',
  getParentRoute: () => AppRoute,
} as any)

const AppSettingsRoute = AppSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)

const AppAccountsIndexRoute = AppAccountsIndexImport.update({
  id: '/accounts/',
  path: '/accounts/',
  getParentRoute: () => AppRoute,
} as any)

const AppAccountsAccountIdRoute = AppAccountsAccountIdImport.update({
  id: '/accounts/$accountId',
  path: '/accounts/$accountId',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsImport
      parentRoute: typeof AppImport
    }
    '/_app/subscriptions': {
      id: '/_app/subscriptions'
      path: '/subscriptions'
      fullPath: '/subscriptions'
      preLoaderRoute: typeof AppSubscriptionsImport
      parentRoute: typeof AppImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof rootRoute
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/accounts/$accountId': {
      id: '/_app/accounts/$accountId'
      path: '/accounts/$accountId'
      fullPath: '/accounts/$accountId'
      preLoaderRoute: typeof AppAccountsAccountIdImport
      parentRoute: typeof AppImport
    }
    '/_app/accounts/': {
      id: '/_app/accounts/'
      path: '/accounts'
      fullPath: '/accounts'
      preLoaderRoute: typeof AppAccountsIndexImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppSettingsRoute: typeof AppSettingsRoute
  AppSubscriptionsRoute: typeof AppSubscriptionsRoute
  AppIndexRoute: typeof AppIndexRoute
  AppAccountsAccountIdRoute: typeof AppAccountsAccountIdRoute
  AppAccountsIndexRoute: typeof AppAccountsIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppSettingsRoute: AppSettingsRoute,
  AppSubscriptionsRoute: AppSubscriptionsRoute,
  AppIndexRoute: AppIndexRoute,
  AppAccountsAccountIdRoute: AppAccountsAccountIdRoute,
  AppAccountsIndexRoute: AppAccountsIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/settings': typeof AppSettingsRoute
  '/subscriptions': typeof AppSubscriptionsRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/signin': typeof AuthSigninRoute
  '/': typeof AppIndexRoute
  '/accounts/$accountId': typeof AppAccountsAccountIdRoute
  '/accounts': typeof AppAccountsIndexRoute
}

export interface FileRoutesByTo {
  '/settings': typeof AppSettingsRoute
  '/subscriptions': typeof AppSubscriptionsRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/signin': typeof AuthSigninRoute
  '/': typeof AppIndexRoute
  '/accounts/$accountId': typeof AppAccountsAccountIdRoute
  '/accounts': typeof AppAccountsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/_app/settings': typeof AppSettingsRoute
  '/_app/subscriptions': typeof AppSubscriptionsRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/signin': typeof AuthSigninRoute
  '/_app/': typeof AppIndexRoute
  '/_app/accounts/$accountId': typeof AppAccountsAccountIdRoute
  '/_app/accounts/': typeof AppAccountsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/settings'
    | '/subscriptions'
    | '/auth/register'
    | '/auth/signin'
    | '/'
    | '/accounts/$accountId'
    | '/accounts'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/settings'
    | '/subscriptions'
    | '/auth/register'
    | '/auth/signin'
    | '/'
    | '/accounts/$accountId'
    | '/accounts'
  id:
    | '__root__'
    | '/_app'
    | '/_app/settings'
    | '/_app/subscriptions'
    | '/auth/register'
    | '/auth/signin'
    | '/_app/'
    | '/_app/accounts/$accountId'
    | '/_app/accounts/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthSigninRoute: typeof AuthSigninRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthSigninRoute: AuthSigninRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/auth/register",
        "/auth/signin"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/settings",
        "/_app/subscriptions",
        "/_app/",
        "/_app/accounts/$accountId",
        "/_app/accounts/"
      ]
    },
    "/_app/settings": {
      "filePath": "_app/settings.tsx",
      "parent": "/_app"
    },
    "/_app/subscriptions": {
      "filePath": "_app/subscriptions.tsx",
      "parent": "/_app"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/auth/signin": {
      "filePath": "auth/signin.tsx"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/accounts/$accountId": {
      "filePath": "_app/accounts/$accountId.tsx",
      "parent": "/_app"
    },
    "/_app/accounts/": {
      "filePath": "_app/accounts/index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
